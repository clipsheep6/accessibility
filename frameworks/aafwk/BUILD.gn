# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/accessibility/frameworks/aafwk/aafwk.gni")
import("//build/ohos.gni")

config("accessibleability_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//base/accessibility/frameworks/aafwk/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//utils/native/base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//base/accessibility/interfaces/innerkits/asacfwk/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//base/accessibility/frameworks/asacfwk/include",
    "//foundation/appexecfwk/appexecfwk_lite/utils/bundle_lite",
    "//base/accessibility/util/include",
    "//base/accessibility/common/log/include",
    "//base/accessibility/dummyData",
  ]

  defines = [
    "AAMS_LOG_TAG = \"accessibility_aakit\"",
    "AAMS_LOG_DOMAIN = 0xD005201",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

config("accessibleability_public_config") {
  include_dirs = [ "include" ]
}

ohos_shared_library("accessibleability") {
  install_enable = true

  sources = aafwk_files

  configs = [ ":accessibleability_private_config" ]

  public_configs = [ ":accessibleability_public_config" ]

  deps = [
    "//base/accessibility/interfaces/innerkits/asacfwk:accessibilityclient",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_runtime:ability_manager",
    "ability_runtime:want",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "barrierfree"
  part_name = "accessibility"
}
