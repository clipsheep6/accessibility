# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_output_path = "accessibility/framework_test"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  include_dirs = [
    "//third_party/json/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/accessibility/frameworks/aafwk/include",
    "//base/accessibility/interfaces/innerkits/asacfwk/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//base/accessibility/frameworks/asacfwk/include",
    "//base/accessibility/util/include",
    "//base/accessibility/common/log/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]
  defines = [
    "AAMS_LOG_TAG = \"accessibility_test\"",
    "AAMS_LOG_DOMAIN = 0xD005205",
  ]
}

ohos_systemtest("asac_system_test") {
  module_out_path = module_output_path
  sources = [ "./accessibility_system_ability_client_test.cpp" ]

  configs = [
    ":module_private_config",
    #  "//foundation/aafwk/standard/interfaces/innerkits/base:base_public_config",
  ]

  deps = [
    "//base/accessibility/interfaces/innerkits/asacfwk:accessibilityclient",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//base/miscservices/time/services:time_service",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
  ]
}

###############################################################################

group("systemtest") {
  testonly = true
  deps = []

  deps += [ ":asac_system_test" ]
}
###############################################################################
