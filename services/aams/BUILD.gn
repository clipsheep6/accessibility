# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//base/accessibility/services/aams/accessibleabilityms.gni")

ohos_prebuilt_etc("accessibility_service.rc") {
   source = "etc/accessibility_service.rc"
   relative_install_dir = "init"
   part_name = "accessibility"
   subsystem_name = "barrierfree"
}

config("aams_service_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//third_party/icu/icu4c/source/common",
    "//base/accessibility/frameworks/asacfwk/include",
    "//base/accessibility/interfaces/innerkits/asacfwk/include",
    "//base/accessibility/frameworks/aafwk/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//base/accessibility/util/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/accessibility/dummyData",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk",
    "//base/accessibility/common/log/include",
    "//utils/system/safwk/native/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//utils/native/base/include",
    "//base/powermgr/power_manager/interfaces/innerkits/native/include",
    "//foundation/appexecfwk/standard/kits/appkit/native/app/include",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//foundation/windowmanager/interfaces/innerkits/wm",
  ]

  defines = [
    "AAMS_LOG_TAG = \"accessibility\"",
    "AAMS_LOG_DOMAIN = 0xD005200",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
    # cflags_cc = ["-frtti"]
  }
}

# remove_configs = [ "//build/config/compiler:no_rtti" ]

ohos_shared_library("accessibleabilityms") {
  install_enable = true

  sources = accessibleabilityms_files

  configs = [
    ":aams_service_config",
  ]

  deps = [
     "//utils/native/base:utils",
     "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
     "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
     "//base/accessibility/frameworks/aafwk:accessibleability",
     "//base/accessibility/interfaces/innerkits/asacfwk:accessibilityclient",
     "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
     "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
     "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
     "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
  ]

  external_deps = [
    "ipc:ipc_core",
    "hiviewdfx_hilog_native:libhilog",
    "multimodalinput_base:libmmi-client",
    "ability_runtime:want",
    "ces_standard:cesfwk_innerkits",
    "window_manager:libwm",
  ]

  subsystem_name = "barrierfree"
  part_name = "accessibility"
}
