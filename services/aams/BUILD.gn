# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/accessibility/services/aams/accessibleabilityms.gni")
import("//build/ohos.gni")

ohos_prebuilt_etc("accessibility_service.rc") {
  source = "etc/accessibility_service.rc"
  relative_install_dir = "init"
  part_name = "accessibility"
  subsystem_name = "barrierfree"
}

config("aams_service_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//third_party/icu/icu4c/source/common",
    "//base/accessibility/frameworks/asacfwk/include",
    "//base/accessibility/interfaces/innerkits/asacfwk/include",
    "//base/accessibility/frameworks/aafwk/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//base/accessibility/util/include",
    "//base/accessibility/services/aams/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/accessibility/dummyData",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk",
    "//base/accessibility/common/log/include",
    "//utils/system/safwk/native/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_preferences/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//utils/native/base/include",
    "//base/powermgr/power_manager/interfaces/innerkits/native/include",
    "//foundation/appexecfwk/standard/kits/appkit/native/app/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/bundlemgr",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//base/account/os_account/interfaces/innerkits/osaccount/native/include",
    "//foundation/windowmanager/interfaces/innerkits/wm",
    "//foundation/windowmanager/interfaces/innerkits/dm",
    "//base/accessibility/interfaces/innerkits/aafwk/include",
  ]

  defines = [
    "AAMS_LOG_TAG = \"accessibility\"",
    "AAMS_LOG_DOMAIN = 0xD005200",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("accessibleabilityms") {
  install_enable = true

  sources = accessibleabilityms_files

  configs = [ ":aams_service_config" ]

  deps = [
    "//base/accessibility/frameworks/aafwk:accessibleability",
    "//base/accessibility/interfaces/innerkits/asacfwk:accessibilityclient",
    "//base/account/os_account/frameworks/osaccount/core:os_account_core",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_preferences:native_preferences",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//foundation/windowmanager/dm:libdm",
    "//foundation/windowmanager/wm:libwm",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_core",
    "ces_standard:cesfwk_innerkits",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "os_account_standard:os_account_innerkits",
  ]

  subsystem_name = "barrierfree"
  part_name = "accessibility"
}
