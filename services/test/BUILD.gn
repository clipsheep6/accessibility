# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_output_path = "accessibility/framework_test"

###############################################################################
#1. intent(c++) get/set test without transport

config("module_private_config") {
  visibility = [ ":*" ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
    cflags_cc = [ "-fexceptions" ]
  }
  include_dirs = [
    "mock",
    "../aams/test/mock/",
    "//third_party/json/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/accessibility/services/aams/include",
    "//base/accessibility/frameworks/asacfwk/include",
    "//base/accessibility/frameworks/aafwk/include",
    "//base/accessibility/interfaces/innerkits/asacfwk/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/services/abilitymgr/include",
    "//base/accessibility/util/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//base/notification/ces_standard/cesfwk/kits/native/include",
    "//base/accessibility/dummyData",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk",
    "//base/accessibility/common/log/include",
    "//utils/system/safwk/native/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//utils/native/base/include",
    "//base/powermgr/power_manager/interfaces/innerkits/native/include",
    "//foundation/appexecfwk/standard/kits/appkit/native/app/include",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//foundation/distributedschedule/samgr/services/samgr/native/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/appexecfwk/standard/common/log/include",
    "//third_party/jsoncpp/include/json",
    "//third_party/jsoncpp/include",
  ]
  defines = [
    "AAMS_LOG_TAG = \"accessibility_test\"",
    "AAMS_LOG_DOMAIN = 0xD005205",
  ]
}

################################################################################
ohos_moduletest("aams_accessibility_touch_guider_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_accessibility_touch_guider_test/aams_accessibility_touch_guider_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_event_transmission.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "moduletest/aamstest/aams_accessibility_touch_guider_test/mock/accessibility_window_info_mock.cpp",
    "//base/accessibility/frameworks/asacfwk/src/accessibility_event_info.cpp",
    "//base/accessibility/frameworks/asacfwk/src/accessibility_ability_info.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/multimoduleDummy_mock.cpp",
    "//base/accessibility/services/test/mock/mock_bundle_manager.cpp",
    "//base/accessibility/services/test/mock/accessibility_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_stub_mock.cpp",
    "//base/accessibility/services/test/mock/gesture_simulation_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_manager_service_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_operator_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "//base/accessibility/util/src/json_utils.cpp",
    "//third_party/jsoncpp/src/lib_json/json_value.cpp",
    "//third_party/jsoncpp/src/lib_json/json_writer.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//base/accessibility/frameworks/aafwk:accessibleability",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ces_standard:cesfwk_innerkits",
  ]
}

################################################################################
ohos_moduletest("aams_accessibility_touchEvent_injector_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_accessibility_touchEvent_injector_test/aams_accessibility_touchEvent_injector_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "../aams/src/accessibility_event_transmission.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "//base/accessibility/frameworks/asacfwk/src/accessibility_ability_info.cpp",
    "//base/accessibility/services/test/mock/accessibility_info_mock.cpp",
    "moduletest/aamstest/aams_accessibility_touchEvent_injector_test/mock/accessibility_window_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_manager_service_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/gesture_simulation_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_event_handler_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_impl_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_operator_mock.cpp",
    "//base/accessibility/services/test/mock/multimoduleDummy_mock.cpp",
    "//base/accessibility/services/test/mock/mock_bundle_manager.cpp",
    "//base/accessibility/util/src/json_utils.cpp",
    "//third_party/jsoncpp/src/lib_json/json_value.cpp",
    "//third_party/jsoncpp/src/lib_json/json_writer.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//base/accessibility/frameworks/aafwk:accessibleability",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ces_standard:cesfwk_innerkits",
  ]
}

################################################################################
ohos_moduletest("aams_accessible_ability_channel_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_accessible_ability_channel_test/aams_accessible_ability_channel_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "//base/accessibility/dummyData/multimoduleDummy.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_event_handler_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_impl_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_info_mock.cpp",
    "//base/accessibility/frameworks/asacfwk/src/accessibility_ability_info.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_window_info_mock.cpp",
    "//base/accessibility/services/test/mock/gesture_simulation_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_transmission_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_operator_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_manager_service_stub_mock.cpp",
    "//base/accessibility/services/test/mock/iservice_registry.cpp",
    "//base/accessibility/services/test/mock/system_ability_manager.cpp",
    "//base/accessibility/services/test/mock/mock_bundle_manager.cpp",
    "//base/accessibility/services/test/mock/mock_system_ability_manager_stub.cpp",
    "//base/accessibility/services/test/mock/common_event_support_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_manager_mock.cpp",
    "//base/accessibility/services/test/mock/matching_skill_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_subscribe_info_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_subscriber_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_data_mock.cpp",
    "//base/accessibility/util/src/json_utils.cpp",
    "//third_party/jsoncpp/src/lib_json/json_value.cpp",
    "//third_party/jsoncpp/src/lib_json/json_writer.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ipc:libdbinder",
  ]
}

################################################################################
ohos_moduletest("aams_server_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_server_test/aams_server_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "mock/accessible_ability_manager_service_stub_mock.cpp",
    "mock/accessible_ability_manager_service_state_proxy_mock.cpp",
    "mock/accessible_ability_manager_service_state_stub_mock.cpp",
    "mock/accessible_ability_client_proxy_mock.cpp",
    "../aams/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "../aams/test/mock/accessible_ability_event_handler_mock.cpp",
    "mock/accessibility_event_info_mock.cpp",
    "../aams/test/mock/accessible_ability_client_stub_impl_mock.cpp",
    "../aams/test/mock/accessibility_info_mock.cpp",
    "../aams/test/mock/accessible_ability_client_stub_mock.cpp",
    "mock/accessibility_ability_info_mock.cpp",
    "../aams/test/mock/accessible_ability_channel_stub_mock.cpp",
    "../aams/test/mock/accessibility_window_info_mock.cpp",
    "../aams/test/mock/gesture_simulation_mock.cpp",
    "../aams/test/mock/accessibility_event_transmission_mock.cpp",
    "../aams/test/mock/multimoduleDummy_mock.cpp",
    "../aams/test/mock/accessibility_operator_mock.cpp",
    "../aams/test/mock/iservice_registry.cpp",
    "../aams/test/mock/system_ability_manager.cpp",
    "../aams/test/mock/mock_bundle_manager.cpp",
    "../aams/test/mock/mock_system_ability_manager_stub.cpp",
    "../aams/test/mock/common_event_support_mock.cpp",
    "../aams/test/mock/common_event_manager_mock.cpp",
    "../aams/test/mock/matching_skill_mock.cpp",
    "../aams/test/mock/common_event_subscribe_info_mock.cpp",
    "../aams/test/mock/common_event_subscriber_mock.cpp",
    "../aams/test/mock/common_event_data_mock.cpp",
    "../aams/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "../aams/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "../aams/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "../aams/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ipc:libdbinder",
  ]
}

################################################################################
ohos_moduletest("aams_accessibility_keyevent_filter_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_accessibility_keyevent_filter_test/aams_accessibility_keyevent_filter_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_event_transmission.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "//base/accessibility/frameworks/asacfwk/src/accessibility_ability_info.cpp",
    "//base/accessibility/services/test/mock/accessibility_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_window_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_manager_service_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/gesture_simulation_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_operator_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_event_handler_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_impl_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_mock.cpp",
    "//base/accessibility/services/test/mock/mock_bundle_manager.cpp",
    "moduletest/aamstest/aams_accessibility_keyevent_filter_test/mock/multimoduleDummy_mock.cpp",
    "//base/accessibility/util/src/json_utils.cpp",
    "//third_party/jsoncpp/src/lib_json/json_value.cpp",
    "//third_party/jsoncpp/src/lib_json/json_writer.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ces_standard:cesfwk_innerkits",
  ]
}

################################################################################
ohos_moduletest("aams_common_event_registry_test") {
  module_out_path = module_output_path

  sources = [
    "moduletest/aamstest/aams_common_event_registry_test/aams_common_event_registry_test.cpp",
    "../aams/src/accessibility_account_data.cpp",
    "../aams/src/accessibility_interaction_connection.cpp",
    "../aams/src/accessible_ability_connection.cpp",
    "../aams/src/accessibility_window_manager.cpp",
    "../aams/src/accessibility_common_event_registry.cpp",
    "../aams/src/accessibility_touchEvent_injector.cpp",
    "../aams/src/accessible_ability_manager_service_event_handler.cpp",
    "../aams/src/accessibility_keyevent_filter.cpp",
    "../aams/src/accessibility_input_filter.cpp",
    "../aams/src/accessibility_touch_guider.cpp",
    "../aams/src/accessibility_zoom_handler.cpp",
    "../aams/src/accessibility_gesture_recognizer.cpp",
    "../aams/src/accessibility_zoom_gesture.cpp",
    "../aams/src/accessibility_display_manager.cpp",
    "../aams/src/accessibility_interaction_bridge.cpp",
    "../aams/src/accessible_ability_manager_service.cpp",
    "//base/accessibility/dummyData/multimoduleDummy.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_event_handler_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_impl_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_interaction_operation_callback_proxy_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_client_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_info_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_channel_stub_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_window_info_mock.cpp",
    "//base/accessibility/services/test/mock/gesture_simulation_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_event_transmission_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_operator_mock.cpp",
    "//base/accessibility/services/test/mock/accessible_ability_manager_service_stub_mock.cpp",
    "//base/accessibility/services/test/mock/iservice_registry.cpp",
    "//base/accessibility/services/test/mock/system_ability_manager.cpp",
    "//base/accessibility/services/test/mock/mock_bundle_manager.cpp",
    "//base/accessibility/services/test/mock/mock_system_ability_manager_stub.cpp",
    "//base/accessibility/services/test/mock/common_event_support_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_manager_mock.cpp",
    "//base/accessibility/services/test/mock/matching_skill_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_subscribe_info_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_subscriber_mock.cpp",
    "//base/accessibility/services/test/mock/common_event_data_mock.cpp",
    "//base/accessibility/services/test/mock/accessibility_ability_info_mock.cpp",
    "//base/accessibility/services/test/mock/ability_manager_client_mock.cpp",
    "//foundation/aafwk/standard/services/abilitymgr/src/ability_connect_callback_stub.cpp",
  ]

  configs = [
    ":module_private_config",
  ]

  deps = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//base/powermgr/power_manager/interfaces/innerkits:powermgr_client",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
  ]

  external_deps = [
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "hiviewdfx_hilog_native:libhilog",
    "ability_runtime:want",
    "ipc:libdbinder",
    "bundle_framework:appexecfwk_core",
  ]
}

################################################################################
group("moduletest") {
  testonly = true
  deps = []
  
  if (is_phone_product) {
    deps += [
      ":aams_accessibility_touch_guider_test",
      ":aams_accessibility_touchEvent_injector_test",
      ":aams_accessible_ability_channel_test",
      ":aams_server_test",
      ":aams_accessibility_keyevent_filter_test",
      ":aams_common_event_registry_test",
    ]
  }
}
